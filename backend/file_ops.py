from email.parser import BytesParser
from email import policy
import os

# def store_as_text_file(eml_file_path):
#     # Load the EML file
#         with open(eml_file_path, 'rb') as file:
#             msg = BytesParser(policy=policy.default).parse(file)

#         # Extract information from the parsed message
#         subject = msg['subject']
#         from_address = msg['from']
#         to_address = msg['to']
#         date = msg['date']

#         # Extract the email body
#         if msg.is_multipart():
#             for part in msg.iter_parts():
#                 if part.get_content_type() == 'text/plain':
#                     body = part.get_payload(decode=True).decode('utf-8')
#         else:
#             body = msg.get_payload(decode=True).decode('utf-8')

#         # Save the email content to a text file
#         text_file_path = os.path.join('uploads', 'output_email.json')
#         with open(text_file_path, 'w', encoding='utf-8') as output_file:
#             output_file.write(f'Subject: {subject}\n')
#             output_file.write(f'From: {from_address}\n')
#             output_file.write(f'To: {to_address}\n')
#             output_file.write(f'Date: {date}\n\n')
#             output_file.write(body)

#         os.remove(eml_file_path)


# USE THIS
def store_as_text_file(eml_file_path):
    try:
        # Load the EML file
        with open(eml_file_path, 'rb') as file:
            msg = BytesParser(policy=policy.default).parse(file)

        # Extract information from the parsed message
        subject = msg['subject'] if 'subject' in msg else 'No Subject'
        from_address = msg['from'] if 'from' in msg else 'Unknown Sender'
        to_address = msg['to'] if 'to' in msg else 'Unknown Recipient'
        date = msg['date'] if 'date' in msg else 'Unknown Date'

        # Extract the email body
        body = ""
        if msg.is_multipart():
            for part in msg.iter_parts():
                if part.get_content_type() == 'text/plain':
                    body = part.get_payload(decode=True).decode('utf-8', errors='ignore')
        else:
            body = msg.get_payload(decode=True).decode('utf-8', errors='ignore')

        # Save the email content to a text file
        text_file_path = os.path.join('uploads', 'output_email.txt')
        with open(text_file_path, 'w', encoding='utf-8') as output_file:
            output_file.write(f'Subject: {subject}\n')
            output_file.write(f'From: {from_address}\n')
            output_file.write(f'To: {to_address}\n')
            output_file.write(f'Date: {date}\n\n')
            output_file.write(body)

        # Remove the EML file
        os.remove(eml_file_path)
    except Exception as e:
        raise e

def create_or_open_text_file():
    try:
        file_path = 'uploads/feedback_data.txt'
        # Open the file in write and read mode ('w+'), creating it if it doesn't exist
        if not os.path.exists(file_path):
            with open(file_path, 'w+') as file:
                file.write("This is the FEEDBACK given by user after seeing the JSON result generated by you.\n")
                print(f"Text file created or already exists at: {file_path}")
        else:
            pass
    except Exception as e:
        raise e